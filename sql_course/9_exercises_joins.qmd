---
title: "Oefeningen hoofdstuk 3: tennis joins"
author: Danny Volkaerts
date: last-modified
date-format: "DD MMM, YYYY" 
smaller: true
format:
  revealjs: 
    theme: default
filters:
  - interactive-sql
resources: 
  - sql_course_docs/sql-server-cheat-sheet-a4.pdf
databases:
  - name: tennis
    path: "https://raw.githubusercontent.com/dannyvolkaerts/something/main/tennis.sql"
  - name: ruimte
    path: "https://raw.githubusercontent.com/dannyvolkaerts/something/main/ruimtereizen.sqlite"
---


## De Tennisvereniging

![](sql_course_images/tennis_DB.png)

---

### Algemene informatie

Algemene info over dit database schema kan je [hier](Tennis_uitleg.html) vinden.

![Watterson, Calvin and Hobbes](sql_course_images/Calvin_and_Hobbes_playing_Calvinball.jpg){width=50%}

---

## JOINS (H3)

---

### Oefening 1

Maak een lijst van alle boetes en voeg de naam van de speler toe (naam en eerste letter(s) in één kolom).

``` {.sql .interactive .tennis}

```

:::{.notes}
SELECT b.betalingsnr, b.spelersnr, s.naam || ' ' || s.voorletters AS naam, b.datum, b.bedrag\
FROM boetes b INNER JOIN spelers s ON b.spelersnr = s.spelersnr\

INDIEN namen van de join-kolommen gelijk zijn mag ook USING gebruikt worden:\
FROM boetes b INNER JOIN spelers s USING(spelersnr)
:::

---

### Oefening 2

Geef een overzicht van alle bestuursleden die nu in functie zijn. Toon hun functie. Geef ook hun namen (naam en voorletters in één kolom).

``` {.sql .interactive .tennis}

```

:::{.notes}
SELECT b.spelersnr, s.naam || ' ' || s.voorletters AS naam, b.begin_datum, b.functie\
FROM bestuursleden b INNER JOIN spelers s ON b.spelersnr = s.spelersnr\
WHERE eind_datum IS null\
:::

---

### Oefening 3

Geef een overzicht van alle boetes groter dan € 30. Toon het bedrag in eurocent. Geef ook het spelersnummer en de naam van de speler die de boete kreeg.

``` {.sql .interactive .tennis}

```

:::{.notes}
SELECT b.spelersnr, s.naam, round(bedrag*100) AS "bedrag in centen"\
FROM boetes b INNER JOIN spelers s ON b.spelersnr = s.spelersnr AND bedrag > 30\
:::

---

### Oefening 4

Maak een lijst van alle gewonnen wedstrijden gespeeld door leden van team 2. Toon het spelersnr van de winnende speler en ook het nummer van de kapitein van het team.

``` {.sql .interactive .tennis}

```

:::{.notes}
SELECT w.wedstrijdnr, w.spelersnr, w.teamnr, t.spelersnr AS captain\
FROM wedstrijden w INNER JOIN teams t ON w.teamnr = t.teamnr\
WHERE w.teamnr = 2 AND gewonnen-verloren > 0\
:::

---

### Oefening 5

Toon naam en voorletters (in 1 kolom), team en divisie van de kapitein van elk team.

``` {.sql .interactive .tennis}

```

:::{.notes}
SELECT t.teamnr,t.spelersnr, s.naam || ' ' || s.voorletters AS kapitein, t.divisie
FROM teams t INNER JOIN spelers s ON t.spelersnr = s.spelersnr
:::

---

### MOEILIJKER

---

### Oefening 6

Geef een lijst met het spelersnummer, de naam van de speler, de datum van de boete en het bedrag van de boete van al de spelers die een boete gekregen hebben met een bedrag groter dan € 45,50 en in Rijswijk wonen. Sorteer op spelersnr en het volgnummer van de boete.

``` {.sql .interactive .tennis}

```

:::{.notes}
SELECT spelers.spelersnr, spelers.naam, boetes.datum, boetes.bedrag\
FROM spelers INNER JOIN boetes ON spelers.spelersnr = boetes.spelersnr\
WHERE boetes.bedrag > 45.50 AND spelers.plaats = 'Rijswijk'\
ORDER BY spelers.spelersnr, boetes.betalingsnr;\
:::

---

### Oefening 7

Geef voor elke wedstrijd het wedstrijdnummer en de volledige naam van de aanvoerder van het team waarvoor de wedstrijd werd gespeeld. Sorteer je resultaat volgens het wedstrijdnummer in oplopende volgorde. TIP: je zal hier een JOIN moeten doen met meer dan twee tabellen.

``` {.sql .interactive .tennis}

```

:::{.notes}
SELECT W.wedstrijdnr, T.spelersnr, naam, voorletters\
FROM wedstrijden W INNER JOIN teams T on W.teamnr = T.teamnr\
  INNER JOIN spelers S on T.spelersnr = S.spelersnr\
ORDER BY 1\
:::

---


### Oefening 8

Geef de nummers van de aanvoerders voor wie minstens één boete is betaald.

``` {.sql .interactive .tennis}

```

:::{.notes}
SELECT t.spelersnr \
FROM teams as t, boetes as bt \
WHERE t.spelersnr = bt.spelersnr \

Ook eens uitvoeren met SELECT spelersnr -> amubiguous\
:::

---

### Oefening 9

Geef van elke wedstrijd het spelersnrummer, het teamnummer, de naam van de speler en de divisie van het team.

``` {.sql .interactive .tennis}

```

:::{.notes}
SELECT DISTINCT w.spelersnr, w.teamnr, s.naam, t.divisie\
FROM wedstrijden as w, spelers as s, teams t\
WHERE w.spelersnr = s.spelersnr AND w.teamnr = t.teamnr
:::

---

### Oefening 10

Geef het betalingsnr, spelersnr en de datum van elke boete die betaald is in het jaar waarin de betrokken speler tot de tennisvereniging is toegetreden.

``` {.sql .interactive .tennis}

```

:::{.notes}
SQLite:\
SELECT b.betalingsnr, b.spelersnr, b.datum\
FROM boetes as b, spelers as s on b.spelersnr=s.spelersnr\
WHERE strftime('%Y',b.datum) = s.jaartoe\

SQL server:\
SELECT b.betalingsnr, b.spelersnr, b.datum\
FROM boetes as b, spelers as s on b.spelersnr=s.spelersnr\
WHERE YEAR(b.datum) = s.jaartoe\

DUS niet per se enkel join op basis van de sleutelkolom maar kan ook bijkomende conditie zijn.
:::

---

### Oefening 11

Geef het nummer van elke speler waarvoor op dezelfde dag dat hij bestuurslid is geworden een boete betaald is.

``` {.sql .interactive .tennis}

```

:::{.notes}
SELECT DISTINCT bl.spelersnr\
FROM bestuursleden as bl, boetes as b\
WHERE bl.spelersnr = b.spelersnr\
AND bl.begin_datum = b.datum\
:::

---

### Oefening 12

Geef de nummers van de spelers die ouder zijn dan R.Permentier

``` {.sql .interactive .tennis}

```

:::{.notes}
SELECT s.spelersnr\
FROM spelers as s, spelers as p
WHERE p.naam = 'Permentier'\
AND p.voorletters = 'R'\
AND s.geb_datum < p.geb_datum
:::

---

### Oefening 13

Geef de nummers en de namen van de spelers die in dezelfde plaats wonen als de speler met nummer 27. Speler 27 behoort zelf in het eindresultaat voor te komen.

``` {.sql .interactive .tennis}

```

:::{.notes}
SELECT s.spelersnr, s.naam\
FROM spelers as s, spelers as s27\
WHERE s.Plaats = s27.plaats\
AND s27.spelersnr = 27\

INDIEN speler 27 niet in resultaat mag voorkomen: AND s.spelersnr <> 27\
:::

---

### Oefening 14

Geef het nummer en de naam van elke wedstrijdspeler alsmede het nummer en de naam van de aanvoerder van elk team waarvoor die speler ooit gespeeld heeft; het resultaat mag geen wedstrijdspelers bevatten die zelf aanvoerder zijn van een team.

``` {.sql .interactive .tennis}

```

:::{.notes}
SELECT DISTINCT S.SPELERSNR AS SPELERS_SPELERSNR,\
S.NAAM AS SPELERS_NAAM,\
AANV.SPELERSNR AS AANVOERDER_SPELERSNR,\
AANV.NAAM AS AANVOERDER_NAAM\
FROM SPELERS AS S, SPELERS AS AANV,\
WEDSTRIJDEN AS W, TEAMS AS T\
WHERE W.SPELERSNR = S.SPELERSNR\
AND T.TEAMNR = W.TEAMNR\
AND W.SPELERSNR <> T.SPELERSNR\
AND AANV.SPELERSNR = T.SPELERSNR\
:::

---

### Oefening 15

Geef de nummers van de boetes die qua boetebedrag gelijk zijn aan een boetebedrag behorende bij speler 44. Het resultaat dient niet de boetes van speler 44 te bevatten.

``` {.sql .interactive .tennis}

```

:::{.notes}
SELECT B1.BETALINGSNR, B1.SPELERSNR\
FROM BOETES AS B1, BOETES AS B2\
WHERE B1.BEDRAG = B2.BEDRAG\
AND B2.SPELERSNR = 44\
AND B1.SPELERSNR <> 44\
:::

---

### Oefening 16

Geef van elke speler geboren na juni 1920 het spelersnummer, de naam en de boetebedragen die voor hem of haar betaald zijn.

``` {.sql .interactive .tennis}

```

:::{.notes}
SELECT spelers.spelersnr, naam, bedrag\
FROM spelers, boetes\
WHERE spelers.spelersnr = boetes.spelersnr\
AND geb_datum > '1920-06-30'\

EXPLICIET:\
SELECT spelers.spelersnr, naam, bedrag\
FROM spelers INNER JOIN boetes on spelers.spelersnr = boetes.spelersnr\
WHERE geb_datum > '1920-06-30'\
:::

---

### Oefening 17

Geef voor alle spelers het spelersnr, de naam en de evetuele boetebedragen die voor hem of haar betaald zijn; sorteer op spelersnr.

``` {.sql .interactive .tennis}

```

:::{.notes}
SELECT s.spelersnr, s.naam, b.bedrag\
FROM spelers s LEFT OUTER JOIN boetes b ON s.spelersnr = b.spelersnr
ORDER BY 1
:::

---

### Oefening 18

Geef van elke speler wonende in Rijswijk het spelersnr, de naam , de lijst met boetebedragen en de lijst met teams waarvoor hij of zij een wedstrijd heeft gespeeld.

``` {.sql .interactive .tennis}

```

:::{.notes}
SELECT s.spelersnr, naam, bedrag, teamnr\
FROM spelers s LEFT OUTER JOIN boetes b USING(spelersnr)\
              LEFT OUTER JOIN wedstrijden w on s.spelersnr = w.spelersnr\
WHERE plaats = 'Rijswijk'\
:::

