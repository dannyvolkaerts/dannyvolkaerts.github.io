[
  {
    "objectID": "sql_course/Bikestore_uitleg.html",
    "href": "sql_course/Bikestore_uitleg.html",
    "title": "De Bikestore",
    "section": "",
    "text": "Database schema\n\n\n\nBelangrijke informatie bij de bike store database\nZoals je in het diagram kunt zien, heeft de BikeStores voorbeeld database twee schema’s: verkoop en productie, en deze schema’s hebben negen tabellen. De tabel sales.stores bevat de winkelinformatie. Elke winkel heeft een winkelnaam, contactinformatie zoals telefoon en e-mail, en een adres inclusief straat, stad, staat en postcode. In de tabel sales.staffs wordt de essentiële informatie van het personeel opgeslagen, waaronder de voornaam en achternaam. Het bevat ook de communicatie-informatie zoals e-mail en telefoon.\nEen medewerker werkt in een winkel die wordt gespecificeerd door de waarde in de store_id kolom. Een winkel kan een of meer medewerkers hebben.\nEen medewerker rapporteert aan een filiaalmanager die gespecificeerd wordt door de waarde in de manager_id kolom. Als de waarde in de manager_id nul is, dan is het personeel de topmanager.\nAls een medewerker niet langer voor een winkel werkt, wordt de waarde in de kolom actief op nul gezet.\nDe tabel production.categories slaat de fietscategorieën op, zoals kinderfietsen, comfortfietsen en elektrische fietsen. De tabel production.brands slaat de merkinformatie van fietsen op, bijvoorbeeld Electra, Haro en Heller. De tabel production.products slaat productinformatie op, zoals naam, merk, categorie, modeljaar en catalogusprijs.\nElk product behoort tot een merk dat wordt gespecificeerd door de kolom brand_id. Een merk kan dus nul of veel producten hebben.\nElk product behoort ook tot een categorie die wordt gespecificeerd door de categorie_id kolom. Elke categorie kan ook nul of veel producten hebben. De tabel sales.customers slaat klantgegevens op, waaronder voornaam, achternaam, telefoon, e-mail, straat, stad, staat en postcode. In de tabel sales.orders worden de hoofdgegevens van de verkooporder opgeslagen, waaronder de klant, de status van de order, de besteldatum, de vereiste datum en de verzenddatum.\nDe tabel slaat ook de informatie op over waar de verkooptransactie is aangemaakt (winkel) en wie deze heeft aangemaakt (personeel). In de tabel sales.order_items worden de regelitems van een verkooporder opgeslagen. Elk regelitem hoort bij een verkooporder die wordt gespecificeerd door de order_id kolom.\nEen regelitem van een verkooporder bevat het product, de bestelhoeveelheid, de catalogusprijs en de korting.\nElke verkooporder heeft een rij in de tabel verkooporders. Een verkooporder heeft een of meer regelitems die zijn opgeslagen in de tabel sales.order_items.\nDe tabel production.stocks slaat de voorraadinformatie op, d.w.z. de hoeveelheid van een bepaald product in een specifieke winkel."
  },
  {
    "objectID": "sql_course/11_exercises_subqueries.html#de-tennisvereniging",
    "href": "sql_course/11_exercises_subqueries.html#de-tennisvereniging",
    "title": "Oefeningen subqueries",
    "section": "De Tennisvereniging",
    "text": "De Tennisvereniging"
  },
  {
    "objectID": "sql_course/11_exercises_subqueries.html#subqueries-h5",
    "href": "sql_course/11_exercises_subqueries.html#subqueries-h5",
    "title": "Oefeningen subqueries",
    "section": "SUBQUERIES (H5)",
    "text": "SUBQUERIES (H5)"
  },
  {
    "objectID": "sql_course/9_exercises_joins.html#de-tennisvereniging",
    "href": "sql_course/9_exercises_joins.html#de-tennisvereniging",
    "title": "Oefeningen hoofdstuk 3: tennis joins",
    "section": "De Tennisvereniging",
    "text": "De Tennisvereniging"
  },
  {
    "objectID": "sql_course/9_exercises_joins.html#joins-h3",
    "href": "sql_course/9_exercises_joins.html#joins-h3",
    "title": "Oefeningen hoofdstuk 3: tennis joins",
    "section": "JOINS (H3)",
    "text": "JOINS (H3)"
  },
  {
    "objectID": "sql_course/8_exercises.html#de-tennisvereniging",
    "href": "sql_course/8_exercises.html#de-tennisvereniging",
    "title": "Oefeningen hoofdstuk 1 en 2: tennis",
    "section": "De Tennisvereniging",
    "text": "De Tennisvereniging"
  },
  {
    "objectID": "sql_course/8_exercises.html#basis-h1h2",
    "href": "sql_course/8_exercises.html#basis-h1h2",
    "title": "Oefeningen hoofdstuk 1 en 2: tennis",
    "section": "BASIS (H1,H2)",
    "text": "BASIS (H1,H2)"
  },
  {
    "objectID": "sql_course/index_sql.html",
    "href": "sql_course/index_sql.html",
    "title": "SQL Course",
    "section": "",
    "text": "SQL, or Structured Query Language, is a standardized programming language used to manage and manipulate relational databases. Understanding SQL opens opportunities in data analysis, data engineering, and beyond, making it an essential skill for any aspiring data professional. It enables data professionals to derive meaningful insights from large datasets, perform data analyses, and input data into their machine learning models.\nSQL was developed in the 1970s and has since become the universal language for relational database management systems (RDBMS) like MySQL, PostgreSQL, SQLite, and Microsoft SQL Server. It is widely used in data science, software development, and business intelligence for tasks such as:\nData Retrieval: Extracting specific information from large datasets using SELECT statements.\nData Manipulation: Modifying data with commands like INSERT, UPDATE, and DELETE.\nData Definition: Creating and managing database structures with CREATE, ALTER, and DROP.\nData Analysis: Aggregating and analyzing data using functions like GROUP BY, HAVING, and COUNT.\nSQL’s simplicity and power make it an indispensable tool for professionals working with data, enabling efficient data management and analysis across industries."
  },
  {
    "objectID": "sql_course/index_sql.html#chapters",
    "href": "sql_course/index_sql.html#chapters",
    "title": "SQL Course",
    "section": "Chapters",
    "text": "Chapters\n\nIntroduction to SQL and Databases\nOverview of SQL, databases, and how they are used in data science.\n\n\n\nBasic SQL Queries  Learning SELECT statements and filtering data with WHERE clauses.\n\n\n\nWorking with Table Joins\nIntroduction to JOIN operations and their importance.\n\n\n\nAdvanced Data Manipulation\nUsing GROUP BY, HAVING, and aggregate functions.\n\n\n\nSubqueries, Nested Queries, and Views\nExtending queries with subqueries for more complex data retrieval.\n\n\n\nData Definition Language (DDL) & Data Manipulation Language (DML)\nUnderstanding how to create a database and insert, update, and delete data in the database.\n\n\n\nSQL and PowerBI\nExtracting insights from data by combining the power of SQL with PowerBI.\n\n\n\nExercises Chapter 1 and 2\nExercises for chapters 1 and 2.\n\n\n\nExercises Chapter 3\nExercises for chapter 3 - joins.\n\n\n\nExercises Chapter 4\nExercises for chapter 4 - GROUP BY, HAVING, etc.\n\n\n\nExercises Chapter 5\nExercises for chapter 5 - subqueries.\n\n\n\nExercises Chapter 6\nExercises for DDL - the bike shop."
  },
  {
    "objectID": "posts_main.html",
    "href": "posts_main.html",
    "title": "Articles",
    "section": "",
    "text": "No matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Danny Volkaerts",
    "section": "",
    "text": "Hi! Welcome to my digital space! As a data enthousiast I’m fueled by curiosity and motivated by the goal of turning data into actionable insights. Whether it’s through Machine Learning, data analysis, or data visualizations, I explore data in all its forms to unlock opportunities and drive innovation.\nHere, as a work in progress, I share my experiences, discoveries, and the lessons learned along the way with companies and fellow data enthusiasts. Dive into my courses, read through case studies, or reach out directly if you have any data related question!\n\n\n\n\nCatholic University of Leuven, Leuven, Belgium | Bio-engineering Sciences | Graduated 2010\n\n\n\n\n\nUC Leuven-Limburg Research & Expertise | Data Scientist | Present\nIMEC | Process Engineer | Until April 2018\n\n\n \n  \n   \n  \n    \n     LinkedIn"
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Danny Volkaerts",
    "section": "",
    "text": "Catholic University of Leuven, Leuven, Belgium | Bio-engineering Sciences | Graduated 2010"
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "Danny Volkaerts",
    "section": "",
    "text": "UC Leuven-Limburg Research & Expertise | Data Scientist | Present\nIMEC | Process Engineer | Until April 2018"
  },
  {
    "objectID": "courses.html",
    "href": "courses.html",
    "title": "Courses",
    "section": "",
    "text": "Courses\nWelcome to the course page:\n\nSQL Course: Learn the basics of SQL"
  },
  {
    "objectID": "sql_course/1_introduction.html#inleiding-tot-sql-and-databases",
    "href": "sql_course/1_introduction.html#inleiding-tot-sql-and-databases",
    "title": "Introductie SQL",
    "section": "Inleiding tot SQL and Databases",
    "text": "Inleiding tot SQL and Databases\n\nhttps://dannyvolkaerts.github.io/\nManier van werken: 1. EERD graag afdrukken of naast je houden op ander scherm 2. Interactie via Wooclap -&gt; ik ben mee met het verhaal of niet, eventueel enkele tussenvragen om te pijlen hoe ze mee zijn\nOefeningen via Azure Data Studio: New connection - Microsoft SQL Server\nExtentions links - MySQL -&gt; installeren"
  },
  {
    "objectID": "sql_course/1_introduction.html#sql-in-actie",
    "href": "sql_course/1_introduction.html#sql-in-actie",
    "title": "Introductie SQL",
    "section": "SQL in actie",
    "text": "SQL in actie"
  },
  {
    "objectID": "sql_course/7_powerbi.html#waarom-powerbi-en-sql---belang-van-data-intelligentie",
    "href": "sql_course/7_powerbi.html#waarom-powerbi-en-sql---belang-van-data-intelligentie",
    "title": "Integratie van SQL in PowerBI",
    "section": "Waarom PowerBI en SQL? - Belang van Data-intelligentie",
    "text": "Waarom PowerBI en SQL? - Belang van Data-intelligentie"
  },
  {
    "objectID": "sql_course/7_powerbi.html#concept-en-werkwijze",
    "href": "sql_course/7_powerbi.html#concept-en-werkwijze",
    "title": "Integratie van SQL in PowerBI",
    "section": "Concept en Werkwijze",
    "text": "Concept en Werkwijze"
  },
  {
    "objectID": "sql_course/7_powerbi.html#voorbeelden-van-powerbi-en-sql",
    "href": "sql_course/7_powerbi.html#voorbeelden-van-powerbi-en-sql",
    "title": "Integratie van SQL in PowerBI",
    "section": "Voorbeelden van PowerBI en SQL",
    "text": "Voorbeelden van PowerBI en SQL"
  },
  {
    "objectID": "sql_course/Tennis_uitleg.html",
    "href": "sql_course/Tennis_uitleg.html",
    "title": "De Tennisvereniging",
    "section": "",
    "text": "Database schema\n\n\n\nBelangrijke informatie bij de tennis database\nDe tennisvereniging is opgericht in 1970 en vanaf het begin wordt een aantal administratieve gegevens in een database opgeslagen. Deze database bestaat uit de volgende tabellen: spelers, teams, wedstrijden, boetes en bestuursleden.\n\nDe spelerstabel bevat gegevens over spelers die lid zijn van de tennisvereniging, zoals namen, adressen en geboortedatums. Toetreding tot de vereniging vindt altijd plaats op 1 januari van een bepaald jaar. Spelers kunnen dus niet midden in een jaar lid worden. De spelerstabel bevat geen historische gegevens. Als een speler zijn of haar lidmaatschap opzegt, verdwijnt hij of zij uit de tabel. Ook bij eventuele verhuizingen wordt het oude adres overschreven met het nieuwe adres, het oude adres wordt dus nergens bewaard.\n\nDe tennisvereniging kent twee soorten leden: recreatiespelers en wedstrijdspelers. De eerste groep speelt alleen onderlinge wedstrijden, dus geen wedstrijden tegen spelers van andere verenigingen. De resultaten van de onderlinge wedstrijden worden niet geregistreerd. Wedstrijdspelers spelen in teamverband tegen spelers van andere verenigingen. De resultaten van deze wedstrijden worden wel bijgehouden. Elke speler heeft een uniek nummer, ongeacht of deze wedstrijdspeler is of niet. Dit spelersnummer wordt door de vereniging uitgedeeld. Het is verplicht dat elke wedstrijdspeler bij de tennisbond geregistreerd staat.\n\nDe bond, die een nationaal instituut is, geeft elke wedstrijdspeler een uniek bondsnummer. Dit bondsnummer bestaat meestal uit cijfers, maar kan ook letters bevatten. Als een wedstrijdspeler geen wedstrijden meer speelt, maar recreatiespeler wordt, vervalt het bondsnummer. Let wel, recreatiespelers hebben dus geen bondsnummer, maar wel een spelersnummer.\n\nDe tennisvereniging heeft een aantal teams dat meedoet in competities. Voor elk team worden de aanvoerder en de divisie waarin het team op dat moment uitkomt, geregistreerd. De aanvoerder hoeft geen wedstrijden voor het team gespeeld te hebben. Het zou kunnen dat een bepaalde speler op een bepaald moment aanvoerder van twee of meer teams is. Ook in deze tabel wordt geen historie bijgehouden. Bij promotie of degradatie van een team naar een andere divisie wordt de geregistreerde divisie eenvoudigweg overschreven. Hetzelfde geldt voor de aanvoerder van een team: bij wisseling wordt het nummer van de oude aanvoerder overschreven.\n\nEen team bestaat uit een aantal spelers. Als een team tegen een team van een andere vereniging speelt, speelt elke speler van dat team een wedstrijd tegen een speler van het andere team (we gaan voor het gemak ervan uit dat wedstrijden waarbij koppels tegen elkaar spelen niet voorkomen). Het team waarvan de meeste spelers hun wedstrijd winnen is winnaar.\n\nEen team bestaat niet altijd uit dezelfde groep spelers. Bij ziekte of vakanties zijn soms invallers nodig. Een speler kan dus voor meerdere teams uitkomen. Als we spreken over ‘de spelers van een team’, dan bedoelen we dus de spelers die minstens één wedstrijd voor het team gespeeld hebben. Nogmaals, alleen spelers met een bondsnummer mogen officiële wedstrijden spelen.\n\nEen tenniswedstrijd is opgebouwd uit een aantal sets. Degene die de meeste sets heeft gewonnen is winnaar. Voor elke wedstrijd wordt vooraf bepaald bij hoeveel gewonnen sets de wedstrijd gewonnen is. Over het algemeen wordt de wedstrijd gestopt als een van de twee spelers twee of drie sets gewonnen heeft. Mogelijke eindstanden van een tenniswedstrijd zijn dus 2-1 of 2-0 als gespeeld wordt totdat een van de spelers twee sets gewonnen heeft (best of three), of 3-2, 3-1 of 3-0 als gespeeld wordt tot drie gewonnen sets (best of five). Een speler kan zijn of haar wedstrijd winnen of verliezen, gelijkspel is niet mogelijk. In de wedstrijdentabel wordt voor elke wedstrijd apart bijgehouden welke speler de wedstrijd heeft gespeeld en voor welk team. Tevens wordt geregistreerd hoeveel sets de speler heeft gewonnen en verloren. Hieruit is af te leiden of hij of zij de wedstrijd gewonnen heeft.\n\nVoor onreglementair gedrag van spelers (te late opkomst, agressief gedrag of niet verschijnen) worden door de bond boetes opgelegd. Boetes worden door de vereniging betaald. Na betaling worden ze in de boetestabel geregistreerd. Zolang een speler wedstrijden speelt, blijven alle boetes bewaard die voor hem of haar opgelegd en betaald zijn.\n\nAls een speler de vereniging verlaat, worden al zijn of haar gegevens in de vijf tabellen vernietigd. Als de vereniging een team terugtrekt, worden alle gegevens over dat team uit de teams- en wedstrijdentabel verwijderd. Als een wedstrijdspeler stopt met het spelen van wedstrijden en hij of zij dus weer recreant wordt, worden alle wedstrijd- en boetegegevens uit de desbetreffende tabellen verwijderd.\n\nSinds 1 januari 1990 wordt in de bestuursledentabel bijgehouden wie er in het bestuur zitten. Vier functies worden onderscheiden: voorzitter, penningmeester, secretaris en algemeen lid. Elk jaar op 1 januari wordt een nieuw bestuur gekozen. Wanneer een speler een bestuursfunctie bekleedt, worden de begin- en einddatum hiervan geregistreerd. Als iemand nog actief is, wordt er geen einddatum ingevuld.\n\n\n\nEnkele aandachtspunten\nIn het database schema willen we even wijzen op enkele punten:\n\nMerk op dat het spelersnummer een centrale rol in het schema heeft. Het is in één tabel de primaire sleutel en in de vier andere tabellen de externe sleutel (‘foreign key’).\n\nDe bestuursledentabel heeft een samengestelde primaire sleutel. In de figuur zie je dat aan de twee sleutelicoontjes, in de code staan er twee kolommen in de PRIMARY KEY.\n\nEen veelgemaakte fout is geen rekening houden met het feit dat het spelersnummer in de teamstabel het nummer is van de kapitein van een team. Om te weten wie effectief wedstrijden gespeeld heeft, moet je in de wedstrijdentabel het spelersnummer gebruiken."
  },
  {
    "objectID": "sql_course/10_exercises_advanced.html#de-tennisvereniging",
    "href": "sql_course/10_exercises_advanced.html#de-tennisvereniging",
    "title": "Oefeningen advanced",
    "section": "De Tennisvereniging",
    "text": "De Tennisvereniging"
  },
  {
    "objectID": "sql_course/12_exercise_DDL.html#de-fietsenwinkel",
    "href": "sql_course/12_exercise_DDL.html#de-fietsenwinkel",
    "title": "Oefeningen DDL - Fietsenwinkel",
    "section": "De fietsenwinkel",
    "text": "De fietsenwinkel"
  },
  {
    "objectID": "sql_course/12_exercise_DDL.html#ddl",
    "href": "sql_course/12_exercise_DDL.html#ddl",
    "title": "Oefeningen DDL - Fietsenwinkel",
    "section": "DDL",
    "text": "DDL"
  }
]